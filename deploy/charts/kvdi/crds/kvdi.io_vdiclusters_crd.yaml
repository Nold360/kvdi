apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: vdiclusters.kvdi.io
spec:
  group: kvdi.io
  names:
    kind: VDICluster
    listKind: VDIClusterList
    plural: vdiclusters
    singular: vdicluster
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: VDICluster is the Schema for the vdiclusters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: VDIClusterSpec defines the desired state of VDICluster
          properties:
            app:
              description: App configurations.
              properties:
                auditLog:
                  description: Whether to log auditing events to stdout
                  type: boolean
                corsEnabled:
                  description: Whether to add CORS headers to API requests
                  type: boolean
                image:
                  description: The image to use for the app instances. Defaults to
                    the public image matching the version of the currently running
                    manager.
                  type: string
                replicas:
                  description: The number of app replicas to run
                  format: int32
                  type: integer
                resources:
                  description: Resource requirements to place on the app pods
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
              type: object
            appNamespace:
              description: The namespace to provision application resurces in. Defaults
                to the `default` namespace
              type: string
            auth:
              description: Authentication configurations
              properties:
                adminSecret:
                  description: A secret where a generated admin password will be stored
                  type: string
                allowAnonymous:
                  description: Allow anonymous users to create desktop instances
                  type: boolean
                localAuth:
                  description: Use local auth (secret-backed) authentication
                  type: object
              type: object
            certManagerNamespace:
              description: The namespace cert-manager is running in. Defaults to `cert-manager`.
              type: string
            imagePullSecrets:
              description: Pull secrets to use when pulling container images
              items:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              type: array
            secrets:
              description: Secrets backend configurations
              properties:
                k8sSecret:
                  description: Use a kubernetes secret for storing sensitive values.
                  properties:
                    secretName:
                      description: The name of the secret backing the values. Default
                        is `<cluster-name>-app-secrets`.
                      type: string
                  type: object
              type: object
            userdataSpec:
              description: The configuration for user volumes. *NOTE:* Even though
                the controller will try to force the reclaim policy on created volumes
                to `Retain`, you may want to set it explicitly on your storage-class
                controller as an extra safeguard.
              properties:
                accessModes:
                  description: 'AccessModes contains the desired access modes the
                    volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                  items:
                    type: string
                  type: array
                dataSource:
                  description: This field requires the VolumeSnapshotDataSource alpha
                    feature gate to be enabled and currently VolumeSnapshot is the
                    only supported data source. If the provisioner can support VolumeSnapshot
                    data source, it will create a new volume and data will be restored
                    to the volume at the same time. If the provisioner does not support
                    VolumeSnapshot data source, volume will not be created and the
                    failure will be reported as an event. In the future, we plan to
                    support more data source types and the behavior of the provisioner
                    may change.
                  properties:
                    apiGroup:
                      description: APIGroup is the group for the resource being referenced.
                        If APIGroup is not specified, the specified Kind must be in
                        the core API group. For any other third-party types, APIGroup
                        is required.
                      type: string
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the name of resource being referenced
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                resources:
                  description: 'Resources represents the minimum resources the volume
                    should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                selector:
                  description: A label query over volumes to consider for binding.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                storageClassName:
                  description: 'Name of the StorageClass required by the claim. More
                    info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                  type: string
                volumeMode:
                  description: volumeMode defines what type of volume is required
                    by the claim. Value of Filesystem is implied when not included
                    in claim spec. This is a beta feature.
                  type: string
                volumeName:
                  description: VolumeName is the binding reference to the PersistentVolume
                    backing this claim.
                  type: string
              type: object
          type: object
        status:
          description: VDIClusterStatus defines the observed state of VDICluster
          properties:
            ready:
              type: boolean
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
